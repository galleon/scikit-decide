name: ðŸ”¨ Build scikit-decide dependencies

on:
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2016, macos-10.15, ubuntu-latest]
        python-version: [3.8]
    defaults:
      run:
        shell: bash
    runs-on: ${{ matrix.os }}

    env:
      BOOST_ROOT: ${{github.workspace}}/3rdparty/boost
      BOOST_URL: https://boostorg.jfrog.io/artifactory/main/release/1.76.0/source/boost_1_76_0.tar.bz2

    steps:
      - name: Checkout scikit-decide source code
        uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Load cached venv
        id: cached-pip-wheels
        uses: actions/cache@v2
        with:
          path: ~/.cache
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Restore Boost cache
        uses: actions/cache@v2.1.4
        id: cache-boost
        with:
          path: ${{env.BOOST_ROOT}}
          key: boost

      - name: Install Boost
        if: steps.cache-boost.outputs.cache-hit != 'true'
        run: |
          if [ "$OS" == "Windows_NT" ]; then
            # fix up paths to be forward slashes consistently
            BOOST_ROOT=$(echo $BOOST_ROOT | sed 's/\\/\//g')
          fi
          mkdir -p $BOOST_ROOT
          curl --progress-bar --location --output $BOOST_ROOT/download.tar.bz2 $BOOST_URL
          7z -o$BOOST_ROOT x $BOOST_ROOT/download.tar.bz2 -y -bd
          7z -o$BOOST_ROOT x $BOOST_ROOT/download.tar -y -bd
          cd $BOOST_ROOT && cp -r boost_*/* .
          rm -rf boost_*/* download.tar.bz2 download.tar
        shell: bash

      - name: Set up Docker Buildx
        if: matrix.os == 'ubuntu-latest'
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Install boost & omp on MacOS
        if: matrix.os == 'macos-10.15'
        run: brew install libomp

      - name: Build macOS/Windows wheel
        if: matrix.os != 'ubuntu-latest'
        run: |
          echo $BOOST_ROOT
          python -m pip install --upgrade pip
          pip install build poetry-dynamic-versioning
          python -m build --sdist --wheel

      - name: Build x86 Linux wheels
        if: matrix.os == 'ubuntu-latest'
        run: |
          DOCKER_BUILDKIT=1 docker build -t skdecide_x86_64 --build-arg PYTHON_VERSION=${{ matrix.python-version }} --output type=local,dest=tmpwheelhouse -f scripts/Dockerfile_x86_64 .
          mkdir -p dist
          mv tmpwheelhouse/wheelhouse/*.whl dist/

      - name: Extract files
        run: 7z x dist/*.whl -y

      - name: Build zip
        run: 7z a -tzip skdecide-deps-${{runner.os}}.zip skdecide/hub/bin skdecide/hub/share skdecide/hub/*.msc

      - name: Upload binaries to releases
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: skdecide-deps-*.zip
          tag: binary-deps
          overwrite: true
          file_glob: true
          body: "Binary dependencies to build scikit-decide"
